<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smi.pay.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.smi.pay.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="status" property="status"  jdbcType="INTEGER" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="createDate" property="createDate"   />
    <result column="lastUpdateDate" property="lastUpdateDate"  />
    
  </resultMap>
  
   
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.smi.pay.model.User" >  
    insert into user (username,password,realname,mobile,status,role,createDate)
    values (#{username}, #{password},#{realname},#{mobile},#{status},#{role},#{createDate})
  </insert>
   
  
  <select id="getAll" resultMap="BaseResultMap">
  select  * from user
  </select>
  
   <select id="load" resultMap="BaseResultMap">
     select  * from user where id= #{id,jdbcType=INTEGER}
  </select>
  
  
  <update id="update" parameterType="com.smi.pay.model.User" >   
     update user
     set username = #{username,jdbcType=VARCHAR},password = #{password,jdbcType=VARCHAR}
    ,realname = #{realname,jdbcType=VARCHAR},mobile= #{mobile,jdbcType=VARCHAR}
    ,status= #{status},role= #{role,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <select id="getByUserName" resultMap="BaseResultMap">
     select  *  from user where username=#{username,jdbcType=VARCHAR} LIMIT 1;
  </select>
  
</mapper>